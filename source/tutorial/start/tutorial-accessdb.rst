1.1 访问数据库
-------------------------------------

一旦你创建了数据库，你就可以通过以下方式访问它：

运行 PostgreSQL 的交互式终端程序，它被称为 ``psql``， 它允许你交互地输入、编辑和执行 SQL 命令。

使用一种已有的图形化前端工具，比如 ``pgAdmin`` 或者带 ``ODBC`` 或 ``JDBC`` 支持的办公套件来创建和管理数据库。
这种方法在这份教程中没有介绍。

使用多种绑定发行的语言中的一种写一个自定义的应用。这些可能性在 Part IV 中将有更深入的讨论。

你可能需要启动 ``psql`` 来试验本教程中的例子。 你可以用下面的命令为 ``mydb`` 数据库激活它：

.. code-block:: shell

   $ psql mydb

如果你不提供数据库名字，那么它的缺省值就是你的用户账号名字。在前面使用 createdb 的小节里你应该已经了解了这种方式。

在 ``psql`` 中，你将看到下面的欢迎信息：

.. code-block:: shell

   psql (11.2)
   Type "help" for help.

   mydb=>

最后一行也可能是：

.. code-block:: shell

   mydb=#

这个提示符意味着你是数据库超级用户，最可能出现在你自己安装了 PostgreSQL 实例的情况下。
作为超级用户意味着你不受访问控制的限制。对于本教程的目的而言， 是否超级用户并不重要。

如果你启动 ``psql`` 时碰到了问题，那么请回到前面的小节。诊断 ``createdb`` 的方法和诊断 ``psql`` 的方法很类似，
如果前者能运行那么后者也应该能运行。

``psql`` 打印出的最后一行是提示符，它表示 ``psql`` 正听着你说话，
这个时候你就可以敲入 SQL 查询到一个 ``psql`` 维护的工作区中。试验一下下面的命令：

.. code-block:: shell

   mydb=> SELECT version();
                                         version
   ------------------------------------------------------------------------------------------
   PostgreSQL 11.2 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit
   (1 row)

   mydb=> SELECT current_date;
       date
   ------------
   2016-01-07
   (1 row)

   mydb=> SELECT 2 + 2;
    ?column?
   ----------
           4
   (1 row)

``psql`` 程序有一些不属于 SQL 命令的内部命令。它们以反斜线开头 ``\``。 欢迎信息中列出了一些这种命令。
比如，你可以用下面的命令获取各种 PostgreSQL 的 SQL 命令的帮助语法：

.. code-block:: shell

   mydb=> \h

要退出psql，输入：

.. code-block:: shell

   mydb=> \q

``psql`` 将会退出并且让你返回到命令行 shell。（要获取更多有关内部命令的信息，你可以在 ``psql`` 提示符上键入 ``\?``）
``psql`` 的完整功能在 ``psql`` 中有文档说明。在这份文档里，我们将不会明确使用这些特性，但是你自己可以在需要的时候使用它们。
